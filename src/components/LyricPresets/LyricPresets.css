/* ===== Lyric Presets: dynamic, grid-filled buttons (like Channel Strip) ===== */

/* Panel fills its slot; no fixed heights here */
.preset-panel {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%; /* fill the right-pane slice it was given */
  min-width: 0; /* allow shrinking within flex/grid parents */
  min-height: 0;
  padding: 8px 10px; /* optional breathing room */
  box-sizing: border-box;
}

/* One row, 4 equal columns, stretch to fill available height */
.preset-row {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: 1fr; /* ensure row itself stretches evenly */
  gap: 10px;
  width: 100%;
  height: 100%; /* <- key: consume the panel's height */
  min-width: 0;
  min-height: 0;
  box-sizing: border-box;
}

/* Buttons behave like Channel Strip buttons: fully fill their grid cell */
.preset-btn {
  width: 100%;
  height: 100%;
  appearance: none;
  border: 1px solid #d0d0d0;
  background: #f9fafb;
  color: #111827;
  border-radius: 8px;

  /* Remove intrinsic padding so size is purely grid-driven */
  padding: 0;

  /* Typography similar to strips */
  font-size: 1rem;
  font-weight: 600;
  line-height: 1;

  cursor: pointer;

  /* Center label and keep it tidy */
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  /* Prevent layout conflicts in nested flex/grids (Safari, etc.) */
  min-width: 0;
  min-height: 0;
  box-sizing: border-box;
}

/* Active visual (uses CSS var injected inline: --active-color) */
.preset-btn.is-active {
  border-color: var(--active-color, #2563eb);
  background: color-mix(in srgb, var(--active-color, #2563eb) 14%, #ffffff 86%);
  color: #0f172a;
}

/* Interaction states */
.preset-btn:active:not(.is-disabled) {
  transform: translateY(1px);
}
.preset-btn:focus-visible {
  outline: 2px solid #2563eb;
  outline-offset: 2px;
}

/* Disabled (match Channel Strip disabled look/feel) */
.preset-btn.is-disabled,
.preset-btn:disabled,
.preset-btn[aria-disabled="true"] {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Keep disabled style neutral on hover/active */
.preset-btn.is-disabled:hover,
.preset-btn:disabled:hover,
.preset-btn[aria-disabled="true"]:hover {
  background: #f9fafb;
}
.preset-btn.is-disabled:active,
.preset-btn:disabled:active,
.preset-btn[aria-disabled="true"]:active {
  transform: none;
}

/* If a disabled button somehow carries .is-active, neutralize it */
.preset-btn.is-disabled.is-active,
.preset-btn:disabled.is-active,
.preset-btn[aria-disabled="true"].is-active {
  background: #f9fafb;
  border-color: #d0d0d0;
}

/* Optional inline toggle text next to a button (kept compact) */
.preset-toggle {
  display: inline-flex;
  align-items: center;
  gap: 0px;
  font-weight: 600;
  color: #111827;
}
